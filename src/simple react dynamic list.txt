<div id="wrapper">
  <div class="container">
    <div class="row">
      <div class="col-md-12">
        <div id="app" class="app-container">
        </div>
      </div>
    </div>
  </div>
</div>

css-----------------------------------

body{
background: #C33764;
background: -webkit-linear-gradient(to top, #1D2671, #C33764);
background: linear-gradient(to top, #1D2671, #C33764);
color: #fff;
}
html{
  background: #1D2671;
}
ul{
  list-style: none;
  padding: 0;
  width: 70%;
  float:right;
}

li{
  width: 100%;
  text-align: center;
  background-color: #0d264f;
  border-radius: 10px;
  margin: 2px;
  padding: 5px;
  font-size: 18px;
  cursor: pointer;
}

form{
  float:left;
  width: 30%;
  padding: 20px;
  background-color: 
}

input{
  width: 100%;
  border: none;
  padding: 10px;
  font-size:20px;
  color: #0d264f;
  background-color: #c7c7e7;
}

button{
  float: right;
  padding: 10px 20px;
  margin: 10px 0;
  border: none;
  border-radius: 3px;
  color: #fff;
  background-color: #0d264f;
}

js--------------------------------------------------

class App extends React.Component {
  constructor(props){
    super(props);
    this.state = {
      dynamicList: []
    };
    this.addListItem = this.addListItem.bind(this);
    this.removeListItem = this.removeListItem.bind(this);
  }
  addListItem(itemToAdd){
    let currentList = this.state.dynamicList;
    currentList.push(itemToAdd);
    this.setState({dynamicList : currentList});
  }
  removeListItem(itemToRemove){
    let currentList = this.state.dynamicList;
    currentList.splice(itemToRemove, 1);
    this.setState({dynamicList : currentList});
  }
  render(){
    return(
      <div class="component-wrapper">
        <h1>Simple Dynamic List</h1>
        <DynamicList listItems={this.state.dynamicList} removeItem={this.removeListItem} />
        <InputBox addItem={this.addListItem} />
      </div>
    );
  }
}

class DynamicList extends React.Component {
  render(){
    return (
      <ul>
        {
          Object.keys(this.props.listItems).map( (index) => {
            return (
              <li onClick={ () => this.props.removeItem(index) } name={index}>{this.props.listItems[index]}</li>
            );
          })
        }
      </ul>
    );
  }
}

class InputBox extends React.Component {
  formSubmit(e){
    e.preventDefault();    
    let itemToAdd = this.refs.item.value;
    if(itemToAdd != ''){
      this.props.addItem(itemToAdd);
      this.refs.item.value = '';
    }
  }
  render(){
    return (
      <form ref="itemForm" onSubmit={e => this.formSubmit(e)}>
        <p>Add items to the dynamic list</p>
        <input type="text" id="item" ref="item"/><br />
        <button type="submit" class="btn btn-primary">Add Item</button>
      </form>
    );
  }
}

React.render(
  <App />,
  document.getElementById('app')
);